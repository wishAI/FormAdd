// Generated by CoffeeScript 1.11.1
(function() {
  var SelectionSection;

  SelectionSection = (function() {
    function SelectionSection() {}

    SelectionSection.prototype.startSpan = 0;

    SelectionSection.prototype.endSpan = 0;

    SelectionSection.prototype.startCaretPos = null;

    SelectionSection.prototype.endCaretPos = null;

    return SelectionSection;

  })();

  window.ContentEditableManager = (function() {
    function ContentEditableManager(isWebkit) {
      this.isWebkit = isWebkit;
    }

    ContentEditableManager.prototype.previousSelectionEle = null;

    ContentEditableManager.prototype.previousSelectionEleStart = null;

    ContentEditableManager.prototype.previousEndEleOfSelectionSection = null;

    ContentEditableManager.prototype.caretAfterBoldFlag = false;

    ContentEditableManager.prototype.caretAfterBoldNum = 0;

    ContentEditableManager.prototype.reset = function() {
      this.previousSelectionEle = null;
      this.previousSelectionEleStart = null;
      this.previousEndEleOfSelectionSection = null;
      this.caretAfterBoldFlag = false;
      return this.caretAfterBoldNum = 0;
    };

    ContentEditableManager.prototype.setup = function() {
      var _self;
      _self = this;
      setInterval(function() {
        var currentSelectionEle, currentSelectionEleStart, event, sel;
        sel = window.getSelection();
        currentSelectionEle = null;
        currentSelectionEleStart = null;
        if (sel && sel.rangeCount > 0) {
          currentSelectionEle = window.getSelection().getRangeAt(0).startContainer.parentNode;
        }
        if (sel && sel.rangeCount > 0) {
          currentSelectionEleStart = window.getSelection().getRangeAt(0).startOffset;
        }
        if (currentSelectionEle !== this.previousSelectionEle || currentSelectionEleStart !== this.previousSelectionEleStart) {
          event = $.Event("selection");
          event.selectionStartIndex = currentSelectionEleStart;
          $(currentSelectionEle).trigger(event);
        }
        if (currentSelectionEle !== this.previousSelectionEle) {
          $(this.previousSelectionEle).trigger("unselection");
        }
        this.previousSelectionEle = currentSelectionEle;
        return this.previousSelectionEleStart = currentSelectionEleStart;
      }, 20);
      $("#textContent").on("paste", function(evt) {
        var content, text;
        evt.preventDefault();
        text = "";
        if (evt.clipboardData) {
          content = (evt.originalEvent || evt).clipboardData.getData("text/plain");
        } else if (window.clipboardData) {
          content = window.clipboardData.getData("Text");
        } else if (evt.originalEvent.clipboardData) {
          content = $("<div></div>").text(evt.originalEvent.clipboardData.getData("text"));
        }
        return document.execCommand("insertText", false, $(content).html());
      });
      $("#textContent").on("DOMNodeInserted", function(evt) {
        var afterDiv, afterSpan, afterText, beforeDiv, beforeSpan, beforeText, brSepFlag, i, j, len, len1, outText, range, ref, ref1, sel, sepDiv, sepSpan, target, words;
        target = evt.target;
        if (target.innerHTML === "") {
          $(target).removeClass("contentTextBold");
        }
        $(".contentText b").remove();
        $(".contentText strong").remove();
        if (!this.firstChild.tagName) {
          outText = $(this.firstChild).text();
          $(this.firstChild).remove();
          if ($(".contentText").length > 0) {
            $($(".contentText")[0]).text(outText);
          } else {
            $("#textContent").append(this.createContentTextEle(outText, false));
          }
          range = document.createRange();
          sel = window.getSelection();
          range.setStart($(".contentText")[0], 1);
          range.collapse(true);
          sel.removeAllRanges();
          sel.addRange(range);
        }
        if (target.tagName === "BR" && (!this.isWebKit)) {
          sepSpan = target.parentNode;
          if (sepSpan.tagName === "SPAN") {
            if ($(sepSpan.parentNode).attr("id") === "textContent") {
              beforeText = "";
              afterText = "";
              brSepFlag = false;
              ref = sepSpan.childNodes;
              for (i = 0, len = ref.length; i < len; i++) {
                words = ref[i];
                if (words.tagName === "BR") {
                  brSepFlag = true;
                } else if (brSepFlag) {
                  afterText += $(words).text();
                } else {
                  beforeText += $(words).text();
                }
              }
              beforeSpan = $(sepSpan).clone()[0];
              beforeSpan.innerHTML = "";
              $(beforeSpan).text(beforeText);
              afterSpan = $(sepSpan).clone()[0];
              afterSpan.innerHTML = "";
              $(afterSpan).text(afterText);
              beforeDiv = document.createElement("div");
              if ($(sepSpan).prevAll().length > 0) {
                $(sepSpan).prevAll().appendTo($(beforeDiv));
              }
              if ($(beforeSpan).text().length > 0) {
                $(beforeSpan).appendTo($(beforeDiv));
              }
              $(beforeDiv).insertBefore($(sepSpan));
              afterDiv = document.createElement("div");
              if ($(afterSpan).text().length > 0) {
                $(afterSpan).appendTo($(afterDiv));
              }
              if ($(sepSpan).nextAll().length > 0) {
                $(sepSpan).nextAll().appendTo($(afterDiv));
              }
              if (afterDiv.childNodes.length === 0) {
                $(this.createContentTextEle("", false)).appendTo($(afterDiv));
              }
              $(afterDiv).insertAfter($(sepSpan));
              $(sepSpan).remove();
            } else {
              afterText = "";
              brSepFlag = false;
              ref1 = sepSpan.childNodes;
              for (j = 0, len1 = ref1.length; j < len1; j++) {
                words = ref1[j];
                if (words.tagName === "BR") {
                  brSepFlag = true;
                } else if (brSepFlag) {
                  afterText += $(words).text();
                  $(words).remove();
                }
              }
              afterSpan = $(sepSpan).clone()[0];
              $(afterSpan).text(afterText);
              afterDiv = document.createElement("div");
              sepDiv = sepSpan.parentNode;
              if ($(afterSpan).text().length > 0) {
                $(afterSpan).appendTo($(afterDiv));
              }
              if ($(sepSpan).nextAll().length > 0) {
                $(sepSpan).nextAll().appendTo($(afterDiv));
              }
              if ($(sepSpan).text().length === 0) {
                $(sepSpan).remove();
              }
              if (afterDiv.childNodes.length === 0) {
                $(this.createContentTextEle("", false)).appendTo($(afterDiv));
              }
              $(afterDiv).insertAfter($(sepDiv));
              afterDiv.firstChild.focus();
            }

            /*range = document.createRange()
            sel = window.getSelection()
            range.setStart(afterDiv.firstChild, 0)
            range.collapse(true)
            sel.removeAllRanges()
            sel.addRange(range)
             */
            return $(target).remove();
          }
        }
      });
      $(document).on("selection", ".contentTextBold", function(evt) {
        var nextEle, range, selection;
        if ($(this).text().length === evt.selectionStartIndex && window.getSelection().toString().length === 0) {
          if (this.isWebKit) {
            this.caretAfterBoldFlag = true;
            return this.caretAfterBoldNum = $(this).text().length;
          } else {
            nextEle = null;
            if (($(this).next().length)) {
              nextEle = $(this).next()[0];
            } else {
              nextEle = document.createElement("span");
              $(nextEle).addClass("contentText");
              $(nextEle).insertAfter($(this));
            }
            nextEle.focus();
            range = document.createRange();
            selection = window.getSelection();
            if (nextEle.innerHTML === "") {
              range.setStart(nextEle, 0);
            } else {
              range.setStart(nextEle.firstChild, 0);
            }
            range.collapse(true);
            selection.removeAllRanges();
            return selection.addRange(range);
          }
        } else if (this.isWebKit) {
          return this.caretAfterBoldFlag = false;
        }
      });
      $(document).on("unselection", ".contentTextBold", function() {
        if (this.isWebKit) {
          return this.caretAfterBoldFlag = false;
        }
      });
      $(document).on("DOMSubtreeModified", ".contentTextBold", function(evt) {
        var newEle, newText, nextEle, oldText, range, selection;
        if (this.isWebKit) {
          evt.stopPropagation();
          if (this.caretAfterBoldFlag) {
            oldText = $(this).text().substring(0, this.caretAfterBoldNum);
            newText = $(this).text().substring(this.caretAfterBoldNum, $(this).text().length);
            nextEle = null;
            if (($(this).next().length)) {
              nextEle = $(this).next()[0];
            } else {
              nextEle = document.createElement("span");
              $(nextEle).addClass("contentText");
              $(nextEle).insertAfter($(this));
            }
            $(nextEle).text(newText + $(nextEle).text());
            nextEle.focus();
            range = document.createRange();
            selection = window.getSelection();
            range.setStart(nextEle.firstChild, $(this).text().length - this.caretAfterBoldNum);
            range.collapse(true);
            selection.removeAllRanges();
            selection.addRange(range);
            newEle = document.createElement("span");
            newEle.innerHTML = oldText;
            $(newEle).addClass("contentText");
            $(newEle).addClass("contentTextBold");
            $(newEle).insertAfter($(this));
            return $(this).remove();
          }
        }
      });
      return $(document).on("DOMSubtreeModified", "#textContent div", function() {
        if (this.childNodes.length === 0) {
          return $(this).remove();
        }
      });
    };

    ContentEditableManager.prototype.getSelectionSection = function() {
      var allCaretEndPos, allCaretStartPos, charCount, endCaretPos, endSpan, sel, selectionSection, startCaretPos, startSpan;
      sel = window.getSelection();
      allCaretEndPos = $("#textContent").caret("pos");
      allCaretStartPos = allCaretEndPos - window.getSelection().toString().length;
      startSpan = null;
      endSpan = null;
      startCaretPos = 0;
      endCaretPos = 0;
      charCount = 0;
      $(".contentText").each(function() {
        var textLength;
        textLength = $(this).text().length;
        charCount += textLength;
        if (startSpan === null && charCount >= allCaretStartPos) {
          startCaretPos = textLength - (charCount - allCaretStartPos);
          startSpan = this;
        }
        if (charCount >= allCaretEndPos) {
          endCaretPos = textLength - (charCount - allCaretEndPos);
          endSpan = this;
          return false;
        }
      });
      selectionSection = new SelectionSection();
      selectionSection.startSpan = startSpan;
      selectionSection.endSpan = endSpan;
      selectionSection.startCaretPos = startCaretPos;
      selectionSection.endCaretPos = endCaretPos;
      return selectionSection;
    };

    ContentEditableManager.prototype.setBoldText = function() {
      var boldFlag, endSpan, endTextAfter, endTextToBold, isInRange, selectionSection, spanToBold, startSpan, startTextBefore, startTextToBold, textAfter, textBefore, textToBold;
      selectionSection = this.getSelectionSection();
      if (selectionSection.startSpan === selectionSection.endSpan) {
        spanToBold = selectionSection.startSpan;
        textBefore = $(spanToBold).text().substring(0, selectionSection.startCaretPos);
        textAfter = $(spanToBold).text().substring(selectionSection.endCaretPos, $(spanToBold).text().length);
        textToBold = $(spanToBold).text().substring(selectionSection.startCaretPos, selectionSection.endCaretPos);
        if (!$(spanToBold).hasClass("contentTextBold")) {
          $(spanToBold).text(textToBold);
          $(spanToBold).addClass("contentTextBold");
          if (textBefore.length > 0) {
            $(this.createContentTextEle(textBefore, false)).insertBefore($(spanToBold));
          }
          if (textAfter.length > 0) {
            return $(this.createContentTextEle(textAfter, false)).insertAfter($(spanToBold));
          }
        } else {
          $(spanToBold).text(textToBold);
          $(spanToBold).removeClass("contentTextBold");
          if (textBefore.length > 0) {
            $(this.createContentTextEle(textBefore, true)).insertBefore($(spanToBold));
          }
          if (textAfter.length > 0) {
            return $(this.createContentTextEle(textAfter, true)).insertAfter($(spanToBold));
          }
        }
      } else {
        boldFlag = false;
        isInRange = false;
        startSpan = selectionSection.startSpan;
        endSpan = selectionSection.endSpan;
        $(".contentText").each(function() {
          if (this === startSpan) {
            isInRange = true;
          }
          if (isInRange && (!($(this).hasClass("contentTextBold")))) {
            boldFlag = true;
            return false;
          }
          if (this === endSpan) {
            return false;
          }
        });
        startSpan = selectionSection.startSpan;
        endSpan = selectionSection.endSpan;
        startTextBefore = $(startSpan).text().substring(0, selectionSection.startCaretPos);
        startTextToBold = $(startSpan).text().substring(selectionSection.startCaretPos, $(selectionSection.startSpan).text().length);
        endTextToBold = $(endSpan).text().substring(0, selectionSection.endCaretPos);
        endTextAfter = $(endSpan).text().substring(selectionSection.endCaretPos, $(selectionSection.endSpan).text().length);
        if (boldFlag) {
          $(startSpan).text(startTextToBold);
          $(startSpan).addClass("contentTextBold");
          if (startTextBefore.length > 0) {
            $(this.createContentTextEle(startTextBefore, false)).insertBefore($(startSpan));
          }
          $(endSpan).text(endTextToBold);
          $(endSpan).addClass("contentTextBold");
          if (endTextAfter.length > 0) {
            $(this.createContentTextEle(endTextAfter, false)).insertAfter($(endSpan));
          }
        } else {
          $(startSpan).text(startTextToBold);
          $(startSpan).removeClass("contentTextBold");
          if (startTextBefore.length > 0) {
            $(this.createContentTextEle(startTextBefore, true)).insertBefore($(startSpan));
          }
          $(endSpan).text(endTextToBold);
          $(endSpan).removeClass("contentTextBold");
          if (endTextAfter.length > 0) {
            $(this.createContentTextEle(endTextAfter, true)).insertAfter($(endSpan));
          }
        }
        isInRange = false;
        return $(".contentText").each(function() {
          if (this === endSpan) {
            return false;
          }
          if (isInRange) {
            if (boldFlag) {
              $(this).addClass("contentTextBold");
            } else {
              $(this).removeClass("contentTextBold");
            }
          }
          if (this === startSpan) {
            return isInRange = true;
          }
        });
      }
    };

    ContentEditableManager.prototype.createContentTextEle = function(text, isBold) {
      var ele;
      ele = document.createElement("span");
      $(ele).text(text);
      $(ele).addClass("contentText");
      if (isBold) {
        $(ele).addClass("contentTextBold");
      }
      return ele;
    };

    return ContentEditableManager;

  })();

}).call(this);

//# sourceMappingURL=contentEditableManager.js.map
